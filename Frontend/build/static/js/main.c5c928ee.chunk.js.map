{"version":3,"sources":["contexts/theme/ThemeContext.js","Components/Navbar/NavigationBar.component.js","Components/Generator/Functions.SoftUIGenerator.js","contexts/theme/ThemeReducer.js","contexts/types.js","contexts/theme/ThemeState.js","Components/Generator/Generator.components/SoftUIGenButton.js","Components/Inputs/Input.component.jsx","Components/Generator/Generator.components/SoftUIGenInput.js","Components/Badge/Badge.component.jsx","Components/Generator/Generator.components/colorPickerSketch.js","Components/Generator/Generator.js","App.js","index.js"],"names":["themeContext","createContext","NavigationBar","useContext","ThemeContext","font","colorRGB","shadows","console","log","style","backgroundColor","Red","Green","Blue","boxShadow","expand","className","Brand","width","height","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","id","d","fill","darkerShadowArray","ligherShadowArray","color","verticalAlign","calculateShadows","LightShadowFactor","DarkShadowFactor","calculateColor","factor","_color","Math","round","fontColor","red","green","blue","toHex","colorValue","Number","toString","toUpperCase","hexToRGB","hexColor","length","parseInt","slice","numberRangeCheck","calculateShadowFactor","number","state","action","type","localStorage","setItem","darkMode","payload","colorName","lightShadowFactor","darkShadowFactor","codeBackgroundColor","codeFontColor","hexString","replace","hex","shadowBlur","value","borderRadius","shadowLength","ThemeState","props","initialState","JSON","parse","getItem","window","matchMedia","matches","document","body","getThemeStateFromLocalStorage","useReducer","ThemeReducer","dispatch","Provider","changeTheme","changeColor","changeBackground","changeShadowBlur","blurValue","changeBorderRadius","changeShadowLength","changeDarkShadowFactor","changeLightShadowFactor","colorHEX","children","SoftUIGenButton","mainColor","darkerShadow","Blur","onClick","lighterShadow","buttonStyle","default","initial","transition","border","padding","fontWeight","active","hover","first","borderTopLeftRadius","borderBottomLeftRadius","middle","last","borderTopRightRadius","borderBottomRightRadius","useState","buttonActive","setButtonActive","buttonHover","setButtonHover","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","setButtonStyle","Input","placeholder","onChange","onFocus","onBlur","required","name","autoComplete","SoftUIGenInput","inputFocus","setInputFocus","inputStyle","borderColor","focus","setInputStyle","Badge","badgeNormal","badgeSmall","ColorPickerSketch","displayColorPicker","context","handleClick","setState","handleClose","handleChange","colorStyle","this","display","background","styles","reactCSS","swatch","cursor","popover","position","zIndex","cover","top","right","bottom","left","disableAlpha","presetColors","React","Component","contextType","Generator","FONT","setFONT","lighterShadows","darkerShadows","colorInputMode","setColorInputMode","onChangeColor","event","hexOrRGBColorName","target","componentProps","containerStyle","minHeight","mixBlendMode","hexInput","rgbInput","marginRight","marginLeft","fontSize","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAIeA,EAFMC,0BC4BNC,EA1BO,WAClB,IAAMF,EAAgBG,qBAAWC,GAE7BC,EAGAL,EAHAK,KACAC,EAEAN,EAFAM,SACAC,EACAP,EADAO,QAGJ,OADAC,QAAQC,IAAIJ,GAER,kBAAC,IAAD,CAAQK,MAAO,CAACC,gBAAgB,OAAD,OAAQL,EAASM,IAAjB,YAAwBN,EAASO,MAAjC,YAA0CP,EAASQ,MAC9EC,UAAU,gCAAiCC,OAAO,KAC9CC,UAAS,8BAEb,kBAAC,IAAOC,MAAR,KACI,yBAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,cAAcX,MAAO,CAACY,SAAS,UAAUC,SAAS,UAAUC,eAAe,QAAQC,iBAAiB,IACxI,0BAAMC,GAAG,eAAeC,EAAE,uNAAuNjB,MAAO,CAACkB,KAAK,OAAD,OAASrB,EAAQsB,kBAAkB,GAAnC,YAAyCtB,EAAQsB,kBAAkB,GAAnE,YAAyEtB,EAAQsB,kBAAkB,GAAnG,QAC7P,0BAAMH,GAAG,OAAOC,EAAE,uNAAuNjB,MAAO,CAACkB,KAAK,OAAD,OAASrB,EAAQuB,kBAAkB,GAAnC,YAAyCvB,EAAQuB,kBAAkB,GAAnE,YAAyEvB,EAAQuB,kBAAkB,GAAnG,QACrP,0BAAMJ,GAAG,gBAAgBC,EAAE,mNAAmNjB,MAAO,CAACkB,KAAK,OAAD,OAAStB,EAASM,IAAlB,YAAyBN,EAASO,MAAlC,YAA2CP,EAASQ,KAApD,SAE7P,KACD,0BAAMJ,MAAO,CAACqB,MAAO1B,EAAM2B,cAAc,WAAzC,c,wBCxBT,SAASC,EAAiBrB,EAAKC,EAAOC,EAAMoB,EAAmBC,GAClE,SAASC,EAAeL,EAAOM,GAC3B,IAAIC,EAASP,EAAQM,EACrB,OAAGC,EAAS,IACD,IAGAC,KAAKC,MAAMF,GAI1B,MAAO,CACHR,kBAAmB,CACfM,EAAexB,EAAKsB,GACpBE,EAAevB,EAAOqB,GACtBE,EAAetB,EAAMoB,IAEzBL,kBAAmB,CACfO,EAAexB,EAAKuB,GACpBC,EAAevB,EAAOsB,GACtBC,EAAetB,EAAMqB,KAM1B,SAASM,EAAUC,EAAKC,EAAOC,GAGlC,OAFkB,KAAQF,EAAQ,KAAQC,EAAU,KAAQC,GAAO,IAEnD,GACL,OAEA,OAGR,SAASC,EAAMC,GAOlB,OALIA,GAAc,GACT,WAAOC,OAAOD,GAAYE,SAAS,IAAIC,eAEvC,UAAMF,OAAOD,GAAYE,SAAS,IAAIC,eAI5C,SAASC,EAASC,GACrB,OAAwB,IAApBA,EAASC,OACF,CACHxC,IAAKyC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAtB,OAA2BH,EAASG,MAAM,EAAG,IAAM,IAChEzC,MAAOwC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAtB,OAA2BH,EAASG,MAAM,EAAG,IAAM,IAClExC,KAAMuC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAtB,OAA2BH,EAASG,MAAM,EAAG,IAAM,KAGjD,IAApBH,EAASC,OACF,CACHxC,IAAKyC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAM,IACzCzC,MAAOwC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAM,IAC3CxC,KAAMuC,SAAS,GAAD,OAAIF,EAASG,MAAM,EAAG,IAAM,UAJlD,EAWG,SAASC,EAAiBT,GAC7B,OAAIO,SAASP,GAAc,IAChB,IACAO,SAASP,GAAc,EACvB,EAEAO,SAASP,GAGjB,SAASU,EAAsBC,GAClC,IAAIpB,EAASgB,SAASI,GAAU,IAChC,OAAIpB,EAAS,EACF,EACAA,EAAS,EACT,EAEAA,EC5DA,eAACqB,EAAOC,GACnB,OAAQA,EAAOC,MACX,ICrBoB,eDuBhB,OADAC,aAAaC,QAAQ,UAAUJ,EAAMK,UAAUf,YACxC,eACAU,EADP,CAEIK,UAAWL,EAAMK,WAEzB,IC1BoB,eD2BhB,OAAQJ,EAAOK,QAAQC,WAEnB,IAAK,MACD,OAAO,eACAP,EADP,CAEI9C,IAAK2C,EAAiBI,EAAOK,QAAQlB,YACrCvC,QAAS0B,EACLsB,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBACVC,oBAAoB,OAAD,OAAQnC,EACvBsB,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAL3B,0CAMbI,EACFsB,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAX3B,0CAYbI,EACFsB,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAjB3B,KAkBnBxB,KAAMoC,EACFc,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,MAEVuD,cAAe5B,EACXc,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM7C,MACN6C,EAAM5C,MAEVqC,SAAWN,EAAMU,EAAiBI,EAAOK,QAAQlB,aAC5CD,EAAMa,EAAM7C,OACbgC,EAAMa,EAAM5C,QAGxB,IAAK,QACD,OAAO,eACA4C,EADP,CAEI7C,MAAO0C,EAAiBI,EAAOK,QAAQlB,YACvCvC,QAAS0B,EACLyB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBACVC,oBAAoB,OAAD,OAAQnC,EACvByB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAL3B,0CAMbI,EACFyB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAX3B,0CAYbI,EACFyB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,KACN4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAjB3B,KAkBnBxB,KAAMoC,EACFiB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,MAEVuD,cAAe5B,EACXiB,EAAM9C,IACN2C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAM5C,MAEVqC,SACIN,EAAMa,EAAM9C,KACZiC,EAAMU,EAAiBI,EAAOK,QAAQlB,aACrCD,EAAMa,EAAM5C,QAGzB,IAAK,OACD,OAAO,eACA4C,EADP,CAEI5C,KAAMyC,EAAiBI,EAAOK,QAAQlB,YACtCvC,QAAS0B,EACLyB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAMQ,kBACNR,EAAMS,kBACV9D,KAAMoC,EACFiB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,aAEpCuB,cAAe5B,EACXiB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,aAEpCsB,oBAAoB,OAAD,OAAQnC,EACvByB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAL3B,0CAMbI,EACFyB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAX3B,0CAYbI,EACFyB,EAAM9C,IACN8C,EAAM7C,MACN0C,EAAiBI,EAAOK,QAAQlB,YAChCY,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAjB3B,KAkBnBsB,SACIN,EAAMa,EAAM9C,KACXiC,EAAMa,EAAM7C,OACbgC,EAAMU,EAAiBI,EAAOK,QAAQlB,eAGlD,IAAK,MACD,IAAIwB,EAAaX,EAAOK,QAAQlB,WAAYyB,QAAQ,IAAK,IACzD,ODtGM,KADCC,ECuGQF,GDtGpBlB,QAA+B,IAAfoB,EAAIpB,OCuGJ,eACAM,EADP,CAEIP,SAAUmB,EACV1D,IAAKsC,EAASoB,GAAW1D,IACzBC,MAAOqC,EAASoB,GAAWzD,MAC3BC,KAAMoC,EAASoB,GAAWxD,KAC1BP,QAAS0B,EACLiB,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,KACpB4C,EAAMQ,kBACNR,EAAMS,kBACVC,oBAAoB,OAAD,OAAQnC,EACvBiB,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,KACpB4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAL3B,0CAMjBI,EACEiB,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,KACpB4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAX3B,0CAYjBI,EACEiB,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,KACpB4C,EAAMQ,kBACNR,EAAMS,kBAAkBtC,kBAAkB,GAjB3B,KAkBnBxB,KAAMoC,EACFS,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,MAExBuD,cAAe5B,EACXS,EAASoB,GAAW1D,IACpBsC,EAASoB,GAAWzD,MACpBqC,EAASoB,GAAWxD,QAGzB,eACA4C,EADA,CAEHP,SAAUmB,IAElB,QACI,OAAOZ,EAEnB,IClN0B,qBD4NtB,OAAO,eACAA,EADP,CAEIe,YAXQC,EAWSf,EAAOK,QAVhBU,EAAO,IACA,IACAA,EAAQ,EACR,EAEAA,KAOvB,IC/N4B,uBDyOxB,OAAO,eACAhB,EADP,CAEIiB,aAXe,SAACD,GAChB,OAAIA,EAAO,IACA,IACAA,EAAQ,EACR,EAEAA,EAKGC,CAAahB,EAAOK,WAE1C,IC5O4B,uBDsPxB,OAAO,eACAN,EADP,CAEIkB,aAXe,SAACF,GAChB,OAAIA,EAAO,IACA,IACAA,EAAQ,EACR,EAEAA,EAKGE,CAAajB,EAAOK,WAE1C,ICzPiC,4BD0P7B,OAAO,eACAN,EADP,CAEIS,iBAAkBX,EAAsBG,EAAOK,SAC/CzD,QAAS0B,EACLyB,EAAM9C,IACN8C,EAAM7C,MACN6C,EAAM5C,KACN4C,EAAMQ,kBACNV,EAAsBG,EAAOK,YAEzC,ICnQkC,6BDoQ9B,OAAO,eACAN,EADP,CAEIQ,kBAAmBV,EAAsBG,EAAOK,SAChDzD,QAAS0B,EACLyB,EAAM9C,IACN8C,EAAM7C,MACN6C,EAAM5C,KACN0C,EAAsBG,EAAOK,SAC7BN,EAAMS,oBA7DH,IAACO,EDzJGF,GGoIZK,EA9KI,SAACC,GAMlB,IAyCMC,EAAe,CACnBhB,SA1CoC,WACpC,IAAIL,EAAQsB,KAAKC,MAAMpB,aAAaqB,QAAQ,UAC5C,OAAc,OAAVxB,EAEAyB,OAAOC,YACPD,OAAOC,WAAW,gCAAgCC,SAElDC,SAASC,KAAK7E,MAAQ,wBAEf,IAEP4E,SAASC,KAAK7E,MAAQ,wBAEf,IAGLgD,EACF4B,SAASC,KAAK7E,MAAQ,uBACZgD,IACV4B,SAASC,KAAK7E,MAAQ,wBAEjBgD,GAqBC8B,GACV5E,IAAK,IACLC,MAAO,EACPC,KAAM,GACN2D,WAAY,GACZG,aAAc,EACdD,aAAc,GACdR,iBAAkB,IAClBD,kBAAmB,KACnBE,oBAAqB,WAIvBW,EAAa5B,SACXN,EAAMkC,EAAanE,KACnBiC,EAAMkC,EAAalE,OACnBgC,EAAMkC,EAAajE,MAGrBiE,EAAa1E,KAAOoC,EAClBsC,EAAanE,IACbmE,EAAalE,MACbkE,EAAajE,MAGfiE,EAAaV,cAAgB5B,EAC3BsC,EAAanE,IACbmE,EAAalE,MACbkE,EAAajE,MAIfiE,EAAaxE,QAAU0B,EACrB8C,EAAanE,IACbmE,EAAalE,MACbkE,EAAajE,KACbiE,EAAab,kBACba,EAAaZ,kBArFa,MAwFFsB,qBAAWC,EAAcX,GAxFvB,mBAwFrBrB,EAxFqB,KAwFdiC,EAxFc,KA4I5B,OACE,kBAACvF,EAAawF,SAAd,CACElB,MAAO,CACLmB,YApDc,WAClBF,EAAS,CACP/B,KD/GsB,eCgHtBI,QAASe,EAAahB,YAkDpB+B,YA9Cc,SAAC7B,EAAWnB,GAC9B6C,EAAS,CACP/B,KDrHsB,eCsHtBI,QAAS,CAAEC,YAAWnB,iBA4CpBiD,iBAjHmB,WACvB,IAAMrC,EAAQsB,KAAKC,MAAMpB,aAAaqB,QAAQ,UAChC,OAAVxB,EACF4B,SAASC,KAAK7E,MAAQ,uBAElBgD,EACF4B,SAASC,KAAK7E,MAAQ,uBACZgD,IACV4B,SAASC,KAAK7E,MAAQ,yBA0GtBsF,iBAzCmB,SAACC,GACxBN,EAAS,CACP/B,KD3H4B,qBC4H5BI,QAASiC,KAuCPC,mBAnCqB,SAACvB,GAC1BgB,EAAS,CACP/B,KDjI8B,uBCkI9BI,QAASW,KAiCPwB,mBA7BqB,SAACvB,GAC1Be,EAAS,CACP/B,KDvI8B,uBCwI9BI,QAASY,KA2BPwB,uBAvByB,SAACjC,GAC9BwB,EAAS,CACP/B,KD7ImC,4BC8InCI,QAASG,KAqBPkC,wBAjB0B,SAACnC,GAC/ByB,EAAS,CACP/B,KDnJoC,6BCoJpCI,QAASE,KAeP7D,KAAMqD,EAAMrD,KACZE,QAASmD,EAAMnD,QACfD,SAAU,CACRM,IAAK8C,EAAM9C,IACXC,MAAO6C,EAAM7C,MACbC,KAAM4C,EAAM5C,MAEdwF,SAAU5C,EAAMP,SAChBY,SAAUL,EAAMK,SAChBU,WAAYf,EAAMe,WAClBJ,cAAeX,EAAMW,cACrBO,aAAclB,EAAMkB,aACpBD,aAAcjB,EAAMiB,aACpBR,iBAAkBT,EAAMS,iBACxBD,kBAAmBR,EAAMQ,kBACzBE,oBAAqBV,EAAMU,sBAG5BU,EAAMyB,WCeEC,EAvMS,SAAC,GAA4D,IAE7EC,EAAWpG,EAAMqG,EACjBC,EAHkB7B,EAA0D,EAA1DA,MAAOyB,EAAmD,EAAnDA,SAAUK,EAAyC,EAAzCA,QAAyC,IAAhClD,aAAgC,MAA1B,GAA0B,MAAtBE,YAAsB,MAAf,UAAe,EAE7CiD,EAAgB,OACzCjC,EAAe,EAGJ,oBAAVE,IACP2B,EAAY3B,EAAM2B,UAClBpG,EAAOyE,EAAMzE,KACbqG,EAAe5B,EAAM4B,aACrBG,EAAgB/B,EAAM+B,cACtBF,EAAO7B,EAAM6B,KACb/B,EAAeE,EAAMF,cAGzB,IAAMkC,EAAc,CAChBC,QAAQ,CACJC,QAAQ,CACJ7F,MAAO,OACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,aAAD,OAAcT,GACpB1E,MAAM1B,EACNU,UAAU,GAAD,OAAK6D,EAAL,cAAuBA,EAAvB,cAAyC+B,EAAzC,gBAAqDD,EAArD,sCACC9B,EADD,eACoBA,EADpB,cACsC+B,EADtC,gBACkDE,GAC3DlC,aAAc,OACdwC,QAAS,iBACTC,WAAW,QAEfC,OAAO,CACHlG,MAAO,OACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,aAAD,OAAcT,GACpB1E,MAAM1B,EACNU,UAAU,SAAD,OAAW6D,EAAX,cAA6BA,EAA7B,cAA+C+B,EAA/C,gBAA2DD,EAA3D,4CACO9B,EADP,eAC0BA,EAD1B,cAC4C+B,EAD5C,gBACwDE,GACjElC,aAAc,OACdwC,QAAS,iBACTC,WAAW,QAEfE,MAAM,CACFnG,MAAO,OACP+F,OAAO,aAAD,OAAcT,GACpBQ,WAAY,kCACZtC,aAAc,OACdwC,QAAS,iBACTxG,gBAAgBN,EAChB0B,MAAM0E,EACNW,WAAW,SAGnBG,MAAM,CACFP,QAAS,CACL7F,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnF,MAAM1B,EACNU,UAAU,GAAD,OAAK6D,EAAL,cAAuBA,EAAvB,cAAyC+B,EAAzC,gBAAqDD,EAArD,kCACH9B,EADG,eACgBA,EADhB,cACkC+B,EADlC,gBAC8CE,GACvDW,oBAAqB,OACrBC,uBAAwB,OACxBN,QAAS,iBACTC,WAAW,QAEfC,OAAQ,CACJlG,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnF,MAAM1B,EACNU,UAAU,SAAD,OAAW6D,EAAX,cAA6BA,EAA7B,cAA+C+B,EAA/C,gBAA2DD,EAA3D,wCACG9B,EADH,eACsBA,EADtB,cACwC+B,EADxC,gBACoDE,GAC7DW,oBAAqB,OACrBC,uBAAwB,OACxBN,QAAS,iBACTC,WAAW,QAEfE,MAAO,CACHnG,MAAO,MACPR,gBAAgBN,EAChB4G,WAAY,kCACZC,OAAO,YACPnF,MAAM0E,EACNe,oBAAqB,OACrBC,uBAAwB,OACxBN,QAAS,iBACTC,WAAW,SAGnBM,OAAO,CACHV,QAAQ,CACJ7F,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnF,MAAM1B,EACNU,UAAU,OAAD,OAAS6D,EAAT,cAA2B+B,EAA3B,gBAAuCD,EAAvC,sCACC9B,EADD,cACmB+B,EADnB,gBAC+BE,GACxCM,QAAS,iBACTC,WAAW,QAEfC,OAAO,CACHlG,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnG,UAAU,SAAD,OAAW6D,EAAX,cAA6BA,EAA7B,cAA+C+B,EAA/C,gBAA2DD,EAA3D,wCACG9B,EADH,eACsBA,EADtB,cACwC+B,EADxC,gBACoDE,GAC7D9E,MAAM1B,EACN8G,QAAS,iBACTC,WAAW,QAEfE,MAAO,CACHnG,MAAO,MACPR,gBAAgBN,EAChB4G,WAAY,kCACZC,OAAO,YACPnF,MAAM0E,EACNU,QAAS,iBACTC,WAAW,SAGnBO,KAAK,CACDX,QAAS,CACL7F,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnF,MAAM1B,EACNU,UAAU,GAAD,OAAK6D,EAAL,cAAuBA,EAAvB,cAAyC+B,EAAzC,gBAAqDD,EAArD,kCACH9B,EADG,eACgBA,EADhB,cACkC+B,EADlC,gBAC8CE,GACvDe,qBAAsB,OACtBC,wBAAyB,OACzBV,QAAS,iBACTC,WAAW,QAEfC,OAAQ,CACJlG,MAAO,MACPR,gBAAgB8F,EAChBQ,WAAY,kCACZC,OAAO,YACPnF,MAAM1B,EACNU,UAAU,SAAD,OAAW6D,EAAX,cAA6BA,EAA7B,cAA+C+B,EAA/C,gBAA2DD,EAA3D,wCACG9B,EADH,eACsBA,EADtB,cACwC+B,EADxC,gBACoDE,GAC7De,qBAAsB,OACtBC,wBAAyB,OACzBV,QAAS,iBACTC,WAAW,QAEfE,MAAO,CACHnG,MAAO,MACPR,gBAAgBN,EAChB4G,WAAY,kCACZC,OAAO,YACPnF,MAAM0E,EACNmB,qBAAsB,OACtBC,wBAAyB,OACzBV,QAAS,iBACTC,WAAW,UAhKyD,EAqKxCU,oBAAS,GArK+B,mBAqKzEC,EArKyE,KAqK3DC,EArK2D,OAsK1CF,oBAAS,GAtKiC,mBAsKzEG,EAtKyE,KAsK5DC,EAtK4D,KA0LhF,OACI,4BACAC,YAAa,kBAAMH,GAAgB,IACnCI,UAAW,kBAAMJ,GAAgB,IACjCK,aAAc,kBAAMH,GAAe,IACnCI,aAAc,kBAAMJ,GAAe,IACnCxH,MAxBJ,SAAwBkD,GACpB,OAAOF,GACH,IAAK,SACD,OAAOoD,EAAYlD,GAAMyD,OAC7B,IAAK,QACD,OAAOP,EAAYlD,GAAM0D,MAC7B,IAAK,UACD,OAAOR,EAAYlD,GAAMoD,QAC7B,QACI,OAAIe,EACOjB,EAAYlD,GAAMyD,OAClBY,EACAnB,EAAYlD,GAAM0D,MAElBR,EAAYlD,GAAMoD,SAU9BuB,CAAe3E,GACtBgD,QAASA,GAEJL,ICpKEiC,EA/BD,SAAC,GAUsB,IATlB5E,EASiB,EATjBA,KACA6E,EAQiB,EARjBA,YACA/D,EAOiB,EAPjBA,MACAgE,EAMiB,EANjBA,SACAC,EAKiB,EALjBA,QACAC,EAIiB,EAJjBA,OAIiB,IAHjBC,gBAGiB,SAFjBC,EAEiB,EAFjBA,KAEiB,IADjBC,oBACiB,MADJ,KACI,MAAjBrI,aAAiB,MAAT,GAAS,EAEzBqD,EADe5D,qBAAWC,GAC1B2D,SAEP,OACI,2BACIrD,MAAOA,EACPO,UAAW8C,EAAW,aAAe,QACrCH,KAAMA,EACN6E,YAAaA,EACb/D,MAAOA,EACPgE,SAAUA,EACVC,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,KAAMA,EACNC,aAAcA,KC+BXC,EAxDQ,SAAC,GAAoE,IAKpFvC,EAAWpG,EAAMqG,EALA5B,EAAkE,EAAlEA,MAAkE,IAA3DlB,YAA2D,MAApD,OAAoD,EAA5C8E,EAA4C,EAA5CA,SAAUD,EAAkC,EAAlCA,YAAa/D,EAAqB,EAArBA,MAAqB,IAAdhB,aAAc,MAAR,GAAQ,IAInDoE,oBAAS,GAJ0C,mBAIhFmB,EAJgF,KAIpEC,EAJoE,KAKpDrC,EAAgB,UAG9B,oBAAV/B,IACP2B,EAAY3B,EAAM2B,UAClBpG,EAAOyE,EAAMzE,KACbqG,EAAe5B,EAAM4B,aACrBG,EAAgB/B,EAAM+B,cACf/B,EAAM6B,KACE7B,EAAMF,cAGzB,IAAMuE,EAAa,CACfpC,QAAS,CACLqC,YAAa3C,EACb9F,gBAAiB8F,EACjB1E,MAAO1B,EACPU,UAAU,wBAAD,OAA0B2F,EAA1B,oCAAkEG,IAE/EwC,MAAO,CACHD,YAAa3C,EACb9F,gBAAiB8F,EACjB1E,MAAO1B,EACPU,UAAU,kBAAD,OAAoB2F,EAApB,8BAAsDG,KAiBvE,OACI,kBAAC,EAAD,CAAOjD,KAAMA,EACN+E,QAAS,kBAAMO,GAAc,IAC7BN,OAAQ,kBAAMM,GAAc,IAC5BR,SAAUA,EACVhE,MAAOA,EACP+D,YAAaA,EACb/H,MApBX,WACI,OAAOgD,GACH,IAAK,QACD,OAAOyF,EAAWE,MACtB,IAAK,OACD,OAAOF,EAAWpC,QACtB,QACI,OAAIkC,EACOE,EAAWE,MACRF,EAAWpC,SAWnBuC,MCvBPC,EA9BD,SAAC,GAA2D,IAA1DhD,EAAyD,EAAzDA,SAAyD,IAA/C3C,YAA+C,MAAxC,SAAwC,EAA9B3C,EAA8B,EAA9BA,UAAYc,EAAkB,EAAlBA,MAAOrB,EAAW,EAAXA,MAEnDqD,EADc5D,qBAAWC,GACzB2D,SAEDyF,EACF,0BAAMvI,UAAS,gBACF8C,EAAW,OAAS,QADlB,0BAEThC,GAASA,GAFA,OAEQgC,EAAW,QAAU,GAF7B,0BAGT9C,GAAaA,GACbP,MAAOA,GACX6F,GAGAkD,EACF,0BACI/I,MAAOA,EACPO,UAAS,sBACM8C,EAAW,OAAS,QAD1B,0BAEPhC,GAASA,GAFF,OAEUgC,EAAW,QAAU,GAF/B,0BAGP9C,GAAaA,IAAcsF,GAIrC,MAAa,WAAT3C,EACO4F,EACS,UAAT5F,EACA6F,EACG,M,0DCzBZC,E,4MAGJhG,MAAQ,CACNiG,oBAAoB,EACpB5H,MAAO,CACLyC,IAAK,EAAKoF,QAAQzG,W,EAItB0G,YAAc,WACZ,EAAKC,SAAS,CAAEH,oBAAqB,EAAKjG,MAAMiG,sB,EAGlDI,YAAc,WACZ,EAAKD,SAAS,CAAEH,oBAAoB,K,EAGtCK,aAAe,SAACjI,GACdvB,QAAQC,IAAI,yBAA0B,CAAEsB,MAAOA,IAC/C,EAAK6H,QAAQ9D,YAAY,MAAO/D,EAAMyC,KACtC,EAAKsF,SAAS,CAAE/H,MAAOA,EAAMyC,O,uDAI7B,IAAMyF,EAAa,CACjBlI,MAAO,CACLZ,MAAO,OACPC,OAAQ,OACR8F,OAAO,aAAD,OAAegD,KAAKN,QAAQvJ,MAClC8J,QAAS,eACTxF,aAAc,OACdyF,WAAYF,KAAKxG,MAAM0G,aAIrBC,EAASC,IAAS,CACtBvD,QAAS,CACPhF,MAAO,CACLZ,MAAO,OACPC,OAAQ,OACR+I,QAAS,eACTxF,aAAc,OACdyF,WAAW,OAAD,OAASF,KAAKN,QAAQtJ,SAASM,IAA/B,aAAuCsJ,KAAKN,QAAQtJ,SAASO,MAA7D,aAAuEqJ,KAAKN,QAAQtJ,SAASQ,KAA7F,MAEZyJ,OAAQ,CACNnJ,OAAQ,OACRD,MAAO,OACPgG,QAAS,MACTxC,aAAa,GAAD,OAAKuF,KAAKN,QAAQjF,aAAlB,MACZ5D,UAAU,OAAD,OAASmJ,KAAKN,QAAQrJ,QAAQsB,kBAAkB,GAAhD,aAAuDqI,KAAKN,QAAQrJ,QAAQsB,kBAAkB,GAA9F,aAAqGqI,KAAKN,QAAQrJ,QAAQsB,kBAAkB,GAA5I,mCACIqI,KAAKN,QAAQhF,aADjB,cACmCsF,KAAKN,QAAQhF,aADhD,cACkEsF,KAAKN,QAAQnF,WAD/E,8CAESyF,KAAKN,QAAQrJ,QAAQuB,kBAAkB,GAFhD,aAEuDoI,KAAKN,QAAQrJ,QAAQuB,kBAAkB,GAF9F,aAEqGoI,KAAKN,QAAQrJ,QAAQuB,kBAAkB,GAF5I,sCAGMoI,KAAKN,QAAQhF,aAHnB,eAGsCsF,KAAKN,QAAQhF,aAHnD,cAGqEsF,KAAKN,QAAQnF,WAHlF,UAIT0F,QAAS,eACTK,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,UAKZ,OACE,yBAAKtK,MAAO,CAAEyJ,QAAS,eAAgBnI,cAAe,SACpD,yBAAKtB,MAAO2J,EAAOE,OAAQ3D,QAASsD,KAAKL,aACvC,yBAAKnJ,MAAOuJ,EAAWlI,SAGxBmI,KAAKxG,MAAMiG,mBACV,yBAAKjJ,MAAO2J,EAAOI,SACjB,yBAAK/J,MAAO2J,EAAOO,MAAOhE,QAASsD,KAAKH,cACxC,kBAAC,eAAD,CACEkB,cAAc,EACdlJ,MAAOmI,KAAKxG,MAAM3B,MAClB2G,SAAUwB,KAAKF,aACfkB,aAAc,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,cAIJ,U,GA/FoBC,IAAMC,WAAhC1B,EACG2B,YAAcjL,EAoGRsJ,QCwMA4B,EAvSG,WACd,IAAMtL,EAAgBG,qBAAWC,GAE7BC,EAcAL,EAdAK,KACAC,EAaAN,EAbAM,SAAUgG,EAaVtG,EAbUsG,SACV/F,EAYAP,EAZAO,QACAkE,EAWAzE,EAXAyE,WAAYG,EAWZ5E,EAXY4E,aACED,EAUd3E,EAVA2E,aACAR,EASAnE,EATAmE,iBAAkBD,EASlBlE,EATkBkE,kBAClB4B,EAQA9F,EARA8F,YACAzB,EAOArE,EAPAqE,cACA2B,EAMAhG,EANAgG,iBACAE,EAKAlG,EALAkG,mBACAC,EAIAnG,EAJAmG,mBACA/B,EAGApE,EAHAoE,oBACAgC,EAEApG,EAFAoG,uBACAC,EACArG,EADAqG,wBAhBgB,EAmBIyB,mBAASzH,GAnBb,mBAmBbkL,EAnBa,KAmBPC,EAnBO,KAqBdC,EAAiBlL,EAAQuB,kBACzB4J,EAAgBnL,EAAQsB,kBACxB4E,EAAS,cAAUnG,EAASM,IAAnB,aAA2BN,EAASO,MAApC,aAA8CP,EAASQ,KAAvD,KACT+F,EAAa,cAAU4E,EAAe,GAAzB,aAAgCA,EAAe,GAA/C,aAAsDA,EAAe,GAArE,KACb/E,EAAY,cAAUgF,EAAc,GAAxB,aAA+BA,EAAc,GAA7C,aAAoDA,EAAc,GAAlE,KAzBE,EA4BwB5D,oBAAS,GA5BjC,mBA4Bb6D,EA5Ba,KA4BGC,EA5BH,KA+BdC,EAAgB,SAACC,EAAOC,GAAR,OAA8BjG,EAAYiG,EAAmBD,EAAME,OAAOtH,QAc1FuH,EAAiB,CACnBxF,UAAUA,EACVpG,KAAKkL,EACL5E,KAAKlC,EACLG,aAAaA,EACb8B,aAAaA,EACbG,cAAcA,GAGZqF,EAAiB,CACpB/K,MAAM,OACNC,OAAO,QACP+K,UAAU,QACVxL,gBAAiB8F,EACjB1E,MAAOwJ,EACPa,aAAc,SACdrL,UAAU,GAAD,OAAK6D,EAAL,cAAuBA,EAAvB,cAAyCH,EAAzC,gBAA2DiC,EAA3D,kCACM9B,EADN,eACyBA,EADzB,cAC2CH,EAD3C,gBAC6DoC,GACtEK,OAAO,aAAD,OAAeT,GACrB9B,aAAa,GAAD,OAAKA,EAAL,OAGT0H,EACF,yBAAKpL,UAAW,YACZ,yBAAKA,UAAW,UACZ,4BACI,kBAAC,EAAD,CAAOP,MAAO,CAACC,gBAAgB+F,IAA/B,IACI,0BAAMhG,MAAO,CAACqB,MAAM,UAAWqF,WAAW,SAA1C,MACA,0BAAM1G,MAAO,CAACqB,MAAM,UAAWqF,WAAW,SAA1C,MACA,0BAAM1G,MAAO,CAACqB,MAAM,UAAWqF,WAAW,SAA1C,QAGR,kBAAC,EAAD,CACIsB,SAAU,SAAAoD,GAAK,OAAID,EAAcC,EAAO,QACxCpH,MAAO4B,EACPmC,YAAa,UACb3D,MAAOmH,MAMjBK,EACF,yBAAKrL,UAAW,YACZ,yBAAKA,UAAW,SACZ,4BACI,kBAAC,EAAD,CAAOP,MAAO,CAACC,gBAAgB+F,IAC3B,0BAAMhG,MAAO,CAACqB,MAAM,YAApB,SAGR,kBAAC,EAAD,CACI6B,KAAM,SACN8E,SAAU,SAAAoD,GAAK,OAAID,EAAcC,EAAM,QACvCpH,MAAOpE,EAASM,IAChB6H,YAAa,IACb3D,MAAOmH,KAGf,yBAAKhL,UAAW,SACZ,4BACI,kBAAC,EAAD,CAAOP,MAAO,CAACC,gBAAgB+F,IAC3B,0BAAMhG,MAAO,CAACqB,MAAM,YAApB,WAGR,kBAAC,EAAD,CACI6B,KAAM,SACN8E,SAAU,SAAAoD,GAAK,OAAID,EAAcC,EAAM,UACvCpH,MAAOpE,EAASO,MAChB4H,YAAa,IACb3D,MAAOmH,KAGf,yBAAKhL,UAAW,SACZ,4BACI,kBAAC,EAAD,CAAOP,MAAO,CAACC,gBAAgB+F,IAC3B,0BAAMhG,MAAO,CAACqB,MAAM,YAApB,UAGR,kBAAC,EAAD,CACI6B,KAAM,SACN8E,SAAU,SAAAoD,GAAK,OAAID,EAAcC,EAAM,SACvCpH,MAAOpE,EAASQ,KAChB2H,YAAa,IACb3D,MAAOmH,MAMvB,OACQ,yBAAKhL,UAAW,uBAAwBP,MAAO,CAACyL,UAAU,QAAQxL,gBAAgB8F,EAAW1E,MAAMwJ,IAC/F,yBAAKtK,UAAW,kBACZ,iDACA,yBAAKA,UAAU,gBAAgBP,MAAO,CAAC6L,YAAY,MAAOC,WAAW,QACjE,yBAAKvL,UAAW,iBACZ,yBAAKA,UAAW,YACZ,yBAAKA,UAAW,UACZ,yBACIA,UAAW,oBACXP,MAAOwL,MAKnB,yBAAKjL,UAAW,OACZ,yBAAKA,UAAW,UAAU,wBAAIP,MAAO,CAAC0G,WAAW,SAAvB,UACtB,yBAAKnG,UAAW,OACZ,yBAAKA,UAAW,iBACZ,kBAAC,EAAD,CACI6D,MAAOmH,EACPvI,MAAO,UACP6C,SAAU,YAGlB,yBAAKtF,UAAW,iBACZ,kBAAC,EAAD,CACIyC,MAAO,SACPoB,MAAOmH,EACP1F,SAAU,YAElB,yBAAKtF,UAAW,iBACZ,kBAAC,EAAD,CACIyC,MAAO,QACPoB,MAAOmH,EACP1F,SAAU,cAM9B,yBAAKtF,UAAW,OACZ,yBAAKA,UAAW,UACZ,wBAAIP,MAAO,CAAC0G,WAAW,SAAvB,SACA,yBAAKnG,UAAW,OACZ,yBAAKA,UAAW,iBACZ,kBAAC,EAAD,CACI6D,MAAOmH,EACPvI,MAAO,OACP+E,YAAa,mBAErB,yBAAKxH,UAAW,iBACZ,kBAAC,EAAD,CACI6D,MAAOmH,EACPvI,MAAO,QACP+E,YAAa,wBAMrC,yBAAKxH,UAAW,YACZ,yBAAKP,MAAO,CACRyL,UAAU,QACVxL,gBAAiB8F,EACjB1E,MAAOwJ,EACPa,aAAc,SACdrL,UAAU,GAAD,OAAK6D,EAAL,cAAuBA,EAAvB,cAAyCH,EAAzC,gBAA2DiC,EAA3D,gDACL9B,EADK,eACcA,EADd,cACgCH,EADhC,gBACkDoC,GAC3DK,OAAO,aAAD,OAAeT,GACrB9B,aAAa,GAAD,OAAKA,EAAL,OACZ1D,UAAW,uBACX,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,cACZ,+CAGR,yBAAKA,UAAW,YACZ,yBAAKA,UAAW,UACZ,kBAAC,EAAD,MACA,yBAAKA,UAAW,OAAQP,MAAO,CAACS,MAAM,MAAOgJ,QAAQ,iBACrD,kBAAC,EAAD,CACIrF,MAAOmH,EACP1F,SAAUoF,EAAiB,MAAQ,MACnC/E,QAAS,kBAAMgF,GAAmBD,OAGtC,yBAAM1K,UAAW,OAAQP,MAAO,CAACS,MAAM,MAAOgJ,QAAQ,iBAClD,kBAAC,EAAD,CACIrF,MAAOmH,EACPrF,QAAS,WA5LpC,SAAT2E,EAEAC,EAAQ,QAEM,SAATD,GACLC,EAAQ,SAwL4BjF,SAAU,yBAKzBoF,EAAiBU,EAAWC,EAC7B,yBAAKrL,UAAW,OACZ,yBAAKA,UAAW,YACZ,oCACA,kBAAC,EAAD,CAAgB2C,KAAM,SAAU8E,SA7M/C,SAACoD,GAAD,OAAW9F,EAAiB8F,EAAME,OAAOtH,QA8MnBA,MAAOD,EAAYgE,YAAa,KAAM3D,MAAOmH,KAExD,yBAAKhL,UAAW,YACZ,sCACA,kBAAC,EAAD,CAAgB2C,KAAM,SACf8E,SAlNpB,SAACoD,GAAD,OAAW5F,EAAmB4F,EAAME,OAAOtH,QAmNvBA,MAAOC,EAAc8D,YAAa,KAAM3D,MAAOmH,KAE1D,yBAAKhL,UAAW,YACZ,6CACA,kBAAC,EAAD,CAAgB2C,KAAM,SACf8E,SAtNd,SAACoD,GAAD,OAAW3F,EAAmB2F,EAAME,OAAOtH,QAuN7BA,MAAOE,EAAc6D,YAAa,MAAO3D,MAAOmH,KAE3D,yBAAKhL,UAAW,YACZ,2CACA,kBAAC,EAAD,CAAgB2C,KAAM,SACV8E,SA1Nf,SAACoD,GAAD,OAAW1F,EAAuB0F,EAAME,OAAOtH,QA0NIA,MAAOnC,KAAKC,MAAuB,IAAjB2B,GAClDsE,YAAa,qBAAsB3D,MAAOmH,KAE9D,yBAAKhL,UAAW,YACZ,4CACA,kBAAC,EAAD,CAAgB2C,KAAM,SACf8E,SAjOT,SAACoD,GAAD,OAAWzF,EAAwByF,EAAME,OAAOtH,QAkOvCA,MAAOnC,KAAKC,MAAwB,IAAlB0B,GAClBuE,YAAa,sBAAuB3D,MAAOmH,MAG1D,6BACI,yBAAKhL,UAAW,sBAAuBP,MAAO,CAACC,gBAAgByD,EAAqBO,aAAa,OAAO5D,UAAU,GAAD,OAAIqD,EAAJ,oCAAmDA,EAAnD,+BAC7G,0BAAM1D,MAAO,CAAC+L,SAAS,OAAO1K,MAAMsC,IAChC,0BAAM3D,MAAO,CAACqB,MAAM,YAApB,eADJ,IACwD,0BAAMrB,MAAO,CAAC0G,WAAW,SAAUuE,EAAc,WAAOrF,GAAP,cAA2BhG,EAASM,IAApC,aAA4CN,EAASO,MAArD,aAA+DP,EAASQ,KAAxE,MADzG,IACiM,6BAC7L,0BAAMJ,MAAO,CAACqB,MAAM,YAApB,kBAFJ,IAE2D4C,EAF3D,MAE2E,6BACvE,0BAAMjE,MAAO,CAACqB,MAAM,YAApB,eAHJ,IAGwD6C,EAHxD,MAGyEA,EAHzE,MAG0FH,EAH1F,OAIK,IAAI,0BAAM/D,MAAO,CAAC0G,WAAW,SACzBuE,EAAc,WACP9I,EAAM6I,EAAc,KADb,OACmB7I,EAAM6I,EAAc,KADvC,OAC6C7I,EAAM6I,EAAc,KADjE,cAGJA,EAAc,GAHV,aAGiBA,EAAc,GAH/B,aAGsCA,EAAc,GAHpD,MALvB,IASI,6BACC,eAVL,IAUsB9G,EAVtB,OAUwCA,EAVxC,MAUyDH,EAVzD,OAWK,IAAI,0BAAM/D,MAAO,CAAC0G,WAAW,SACzBuE,EAAc,WACP9I,EAAM4I,EAAe,KADd,OACoB5I,EAAM4I,EAAe,KADzC,OAC+C5I,EAAM4I,EAAe,KADpE,cAGJA,EAAe,GAHX,aAGkBA,EAAe,GAHjC,aAGwCA,EAAe,GAHvD,MAZvB,a,OCpQzBiB,MATf,WACE,OACI,kBAAC,EAAD,KACG,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvH,SAASwH,eAAe,W","file":"static/js/main.c5c928ee.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst themeContext = createContext();\n\nexport default themeContext;\n","import React, {useContext} from \"react\";\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\nimport ThemeContext from \"../../contexts/theme/ThemeContext\";\n\nconst NavigationBar = () => {\n    const themeContext =  useContext(ThemeContext);\n    const {\n        font,\n        colorRGB,\n        shadows\n    } = themeContext;\n    console.log(font)\n    return (\n        <Navbar style={{backgroundColor:`rgb(${colorRGB.Red},${colorRGB.Green},${colorRGB.Blue}`,\n            boxShadow:'0 2px 4px rgba(0, 0, 0, 0.2)'}} expand=\"lg\"\n                className={`navbar-light Navbar-\"Light`}\n        >\n            <Navbar.Brand>\n                <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 172 172\" style={{fillRule:\"evenodd\",clipRule:'evenodd',strokeLinejoin:'round',strokeMiterlimit:2}}>\n                    <path id=\"DarkerShadow\" d=\"M171.505,59.751c0,-20.559 -16.692,-37.251 -37.251,-37.251l-74.503,0c-20.559,0 -37.251,16.692 -37.251,37.251l0,74.503c0,20.559 16.692,37.251 37.251,37.251l74.503,0c20.559,0 37.251,-16.692 37.251,-37.251l0,-74.503Z\" style={{fill: `rgb(${shadows.darkerShadowArray[0]},${shadows.darkerShadowArray[1]},${shadows.darkerShadowArray[2]})`}}/>\n                    <path id=\"Main\" d=\"M149.005,37.251c0,-20.559 -16.692,-37.251 -37.251,-37.251l-74.503,0c-20.559,0 -37.251,16.692 -37.251,37.251l0,74.503c0,20.559 16.692,37.251 37.251,37.251l74.503,0c20.559,0 37.251,-16.692 37.251,-37.251l0,-74.503Z\" style={{fill: `rgb(${shadows.ligherShadowArray[0]},${shadows.ligherShadowArray[1]},${shadows.ligherShadowArray[2]})`}} />\n                    <path id=\"LighterShadow\" d=\"M160.24,48.474c0,-20.56 -16.692,-37.251 -37.251,-37.251l-74.502,0c-20.56,0 -37.252,16.691 -37.252,37.251l0,74.502c0,20.56 16.692,37.251 37.252,37.251l74.502,0c20.559,0 37.251,-16.691 37.251,-37.251l0,-74.502Z\" style={{fill: `rgb(${colorRGB.Red},${colorRGB.Green},${colorRGB.Blue})`}}/>\n                </svg>\n                {'  '}\n                <span style={{color: font, verticalAlign:'bottom'}}>Soft UI</span>\n            </Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default NavigationBar;","export function calculateShadows(Red, Green, Blue, LightShadowFactor, DarkShadowFactor) {\n    function calculateColor(color, factor){\n        let _color = color * factor;\n        if(_color > 255) {\n            return 255\n        }\n        else {\n            return Math.round(_color)\n        }\n    }\n\n    return {\n        ligherShadowArray: [\n            calculateColor(Red, LightShadowFactor),\n            calculateColor(Green, LightShadowFactor),\n            calculateColor(Blue, LightShadowFactor)\n        ],\n        darkerShadowArray: [\n            calculateColor(Red, DarkShadowFactor),\n            calculateColor(Green, DarkShadowFactor),\n            calculateColor(Blue, DarkShadowFactor)\n        ]\n\n    }\n\n}\nexport function fontColor(red, green, blue) {\n    let luminance = ((0.299 * red) + (0.587 * green) + (0.114 * blue))/255;\n\n    if (luminance > 0.5) {\n        return \"#000\"\n    } else {\n        return \"#FFF\"\n    }\n}\nexport function toHex(colorValue){\n    let color\n    if (colorValue <= 15) {\n        color = `0${Number(colorValue).toString(16).toUpperCase()}`\n    } else {\n        color = `${Number(colorValue).toString(16).toUpperCase()}`\n    }\n    return color;\n}\nexport function hexToRGB(hexColor) {\n    if (hexColor.length === 3) {\n        return {\n            Red: parseInt(`${hexColor.slice(0, 1)}${hexColor.slice(0, 1)}`, 16),\n            Green: parseInt(`${hexColor.slice(1, 2)}${hexColor.slice(1, 2)}`, 16),\n            Blue: parseInt(`${hexColor.slice(2, 3)}${hexColor.slice(2, 3)}`, 16)\n        }\n    }\n    if (hexColor.length === 6){\n        return {\n            Red: parseInt(`${hexColor.slice(0, 2)}`, 16),\n            Green: parseInt(`${hexColor.slice(2, 4)}`, 16),\n            Blue: parseInt(`${hexColor.slice(4, 6)}`, 16)\n        }\n    }\n}\nexport function isHexValid(hex) {\n    return hex.length === 3 || hex.length === 6;\n}\nexport function numberRangeCheck(colorValue) {\n    if (parseInt(colorValue) > 255) {\n        return 255\n    } else if (parseInt(colorValue) < 0) {\n        return 0\n    } else {\n        return parseInt(colorValue)\n    }\n}\nexport function calculateShadowFactor(number) {\n    let factor = parseInt(number) / 100\n    if (factor > 2) {\n        return 2\n    } else if (factor < 0) {\n        return 0\n    } else {\n        return factor\n    }\n}","import {\n    CHANGE_COLOR,\n    CHANGE_THEME,\n    CHANGE_SHADOW_BLUR,\n    CHANGE_BORDER_RADIUS,\n    CHANGE_SHADOW_LENGTH,\n    CHANGE_DARK_SHADOW_FACTOR,\n    CHANGE_LIGHT_SHADOW_FACTOR\n} from '../types';\n\nimport {\n    calculateShadows,\n    fontColor,\n    toHex,\n    isHexValid,\n    hexToRGB,\n    numberRangeCheck,\n    calculateShadowFactor\n}from '../../Components/Generator/Functions.SoftUIGenerator';\nexport default (state, action) => {\n    switch (action.type){\n        case CHANGE_THEME:\n            localStorage.setItem('theme',(!state.darkMode).toString());\n            return {\n                ...state,\n                darkMode: !state.darkMode\n            };\n        case CHANGE_COLOR:\n            switch (action.payload.colorName) {\n                //TODO Red Green and Blue return seems similar => Create function\n                case \"Red\":\n                    return {\n                        ...state,\n                        Red: numberRangeCheck(action.payload.colorValue),\n                        shadows: calculateShadows(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor),\n                        codeBackgroundColor:`rgb(${calculateShadows(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[0]},\n                            ${calculateShadows(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[1]},\n                            ${calculateShadows(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[2]})`,\n                        font: fontColor(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue\n                        ),\n                        codeFontColor: fontColor(\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Green,\n                            state.Blue\n                        ),\n                        hexColor: (toHex(numberRangeCheck(action.payload.colorValue))\n                            +toHex(state.Green)+\n                            toHex(state.Blue)\n                        )\n                    }\n                case \"Green\":\n                    return {\n                        ...state,\n                        Green: numberRangeCheck(action.payload.colorValue),\n                        shadows: calculateShadows(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor),\n                        codeBackgroundColor:`rgb(${calculateShadows(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[0]},\n                            ${calculateShadows(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[1]},\n                            ${calculateShadows(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue,\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[2]})`,\n                        font: fontColor(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue\n                        ),\n                        codeFontColor: fontColor(\n                            state.Red,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.Blue\n                        ),\n                        hexColor: (\n                            toHex(state.Red)+\n                            toHex(numberRangeCheck(action.payload.colorValue))\n                            +toHex(state.Blue)\n                        )\n                    }\n                case \"Blue\":\n                    return {\n                        ...state,\n                        Blue: numberRangeCheck(action.payload.colorValue),\n                        shadows: calculateShadows(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.lightShadowFactor,\n                            state.darkShadowFactor),\n                        font: fontColor(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                        ),\n                        codeFontColor: fontColor(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                        ),\n                        codeBackgroundColor:`rgb(${calculateShadows(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[0]},\n                            ${calculateShadows(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[1]},\n                            ${calculateShadows(\n                            state.Red,\n                            state.Green,\n                            numberRangeCheck(action.payload.colorValue),\n                            state.lightShadowFactor,\n                            state.darkShadowFactor).darkerShadowArray[2]})`,\n                        hexColor: (\n                            toHex(state.Red)\n                            +toHex(state.Green)+\n                            toHex(numberRangeCheck(action.payload.colorValue))\n                        )\n                    }\n                case \"Hex\":\n                    let hexString = (action.payload.colorValue).replace(/#/, '')\n                    if (isHexValid(hexString)){\n                        return {\n                            ...state,\n                            hexColor: hexString,\n                            Red: hexToRGB(hexString).Red,\n                            Green: hexToRGB(hexString).Green,\n                            Blue: hexToRGB(hexString).Blue,\n                            shadows: calculateShadows(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                                state.lightShadowFactor,\n                                state.darkShadowFactor),\n                            codeBackgroundColor:`rgb(${calculateShadows(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                                state.lightShadowFactor,\n                                state.darkShadowFactor).darkerShadowArray[0]},\n                            ${calculateShadows(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                                state.lightShadowFactor,\n                                state.darkShadowFactor).darkerShadowArray[1]},\n                            ${calculateShadows(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                                state.lightShadowFactor,\n                                state.darkShadowFactor).darkerShadowArray[2]})`,\n                            font: fontColor(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                            ),\n                            codeFontColor: fontColor(\n                                hexToRGB(hexString).Red,\n                                hexToRGB(hexString).Green,\n                                hexToRGB(hexString).Blue,\n                            )\n                        }\n                    } else return {\n                        ...state,\n                        hexColor: hexString,\n                    }\n                default:\n                    return state;\n        }\n        case CHANGE_SHADOW_BLUR:\n            let blur = (value) => {\n                    if (value> 300) {\n                        return 300\n                    } else if (value < 0) {\n                        return 0\n                    } else {\n                        return value\n                    }\n            }\n            return {\n                ...state,\n                shadowBlur: blur(action.payload)\n            }\n        case CHANGE_BORDER_RADIUS:\n            let borderRadius = (value) => {\n                if (value> 200) {\n                    return 200\n                } else if (value < 0) {\n                    return 0\n                } else {\n                    return value\n                }\n            }\n            return {\n                ...state,\n                borderRadius: borderRadius(action.payload)\n            }\n        case CHANGE_SHADOW_LENGTH:\n            let shadowLength = (value) => {\n                if (value> 150) {\n                    return 150\n                } else if (value < 0) {\n                    return 0\n                } else {\n                    return value\n                }\n            }\n            return {\n                ...state,\n                shadowLength: shadowLength(action.payload)\n            }\n        case CHANGE_DARK_SHADOW_FACTOR:\n            return {\n                ...state,\n                darkShadowFactor: calculateShadowFactor(action.payload),\n                shadows: calculateShadows(\n                    state.Red,\n                    state.Green,\n                    state.Blue,\n                    state.lightShadowFactor,\n                    calculateShadowFactor(action.payload)),\n            }\n        case CHANGE_LIGHT_SHADOW_FACTOR:\n            return {\n                ...state,\n                lightShadowFactor: calculateShadowFactor(action.payload),\n                shadows: calculateShadows(\n                    state.Red,\n                    state.Green,\n                    state.Blue,\n                    calculateShadowFactor(action.payload),\n                    state.darkShadowFactor)\n            }\n    }\n};","export const CHANGE_THEME = 'CHANGE_THEME';\nexport const CHANGE_COLOR = \"CHANGE_COLOR\";\nexport const CHANGE_SHADOW_BLUR = \"CHANGE_SHADOW_BLUR\";\nexport const CHANGE_BORDER_RADIUS = \"CHANGE_BORDER_RADIUS\";\nexport const CHANGE_SHADOW_LENGTH = \"CHANGE_SHADOW_LENGTH\";\nexport const CHANGE_DARK_SHADOW_FACTOR = \"CHANGE_DARK_SHADOW_FACTOR\";\nexport const CHANGE_LIGHT_SHADOW_FACTOR = \"CHANGE_LIGHT_SHADOW_FACTOR\";\n\n\n\n\n\n","import React, { useReducer } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nimport ThemeReducer from \"./ThemeReducer\";\nimport {\n  CHANGE_COLOR,\n  CHANGE_THEME,\n  CHANGE_SHADOW_BLUR,\n  CHANGE_BORDER_RADIUS,\n  CHANGE_SHADOW_LENGTH,\n  CHANGE_DARK_SHADOW_FACTOR,\n  CHANGE_LIGHT_SHADOW_FACTOR,\n} from \"../types\";\nimport {\n  calculateShadows,\n  fontColor,\n  toHex,\n} from \"../../Components/Generator/Functions.SoftUIGenerator\";\n\nconst ThemeState = (props) => {\n  //Darkmode related code\n  // TODO Rename variable from\n  //  getThemeStateFromLocalStorage\n  //  to\n  //  SetInitialTheme\n  const getThemeStateFromLocalStorage = () => {\n    let state = JSON.parse(localStorage.getItem(\"theme\"));\n    if (state === null) {\n      if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ) {\n        document.body.style = \"background: #121212;\";\n        // Use Dark mode scheme\n        return true;\n      } else {\n        document.body.style = \"background: #F0F0F0;\";\n        // Use Default (lightmode) mode scheme\n        return false;\n      }\n    } else {\n      if (state) {\n        document.body.style = \"background: #F0F0F0;\";\n      } else if (!state) {\n        document.body.style = \"background: #121212;\";\n      }\n      return state;\n    }\n  };\n\n  // TODO Delete or rewrite when problem with background (color mismatch) fixed\n  const changeBackground = () => {\n    const state = JSON.parse(localStorage.getItem(\"theme\"));\n    if (state === null) {\n      document.body.style = \"background: #F0F0F0;\";\n    } else {\n      if (state) {\n        document.body.style = \"background: #121212;\";\n      } else if (!state) {\n        document.body.style = \"background: #F0F0F0;\";\n      }\n    }\n  };\n\n  //SoftUI generator related code\n\n  const initialState = {\n    darkMode: getThemeStateFromLocalStorage(),\n    Red: 173,\n    Green: 0,\n    Blue: 62,\n    shadowBlur: 30,\n    shadowLength: 5,\n    borderRadius: 12,\n    darkShadowFactor: 0.85,\n    lightShadowFactor: 1.05,\n    codeBackgroundColor: \"#930035\",\n  };\n\n  //  Calculate hexadecimal value of the color\n  initialState.hexColor =\n    toHex(initialState.Red) +\n    toHex(initialState.Green) +\n    toHex(initialState.Blue);\n\n  //  Calculate contrast font color for background\n  initialState.font = fontColor(\n    initialState.Red,\n    initialState.Green,\n    initialState.Blue\n  );\n\n  initialState.codeFontColor = fontColor(\n    initialState.Red,\n    initialState.Green,\n    initialState.Blue\n  );\n\n  // Calculate shadows\n  initialState.shadows = calculateShadows(\n    initialState.Red,\n    initialState.Green,\n    initialState.Blue,\n    initialState.lightShadowFactor,\n    initialState.darkShadowFactor\n  );\n\n  const [state, dispatch] = useReducer(ThemeReducer, initialState);\n\n  //  Change theme | Dark mode\n  const changeTheme = () => {\n    dispatch({\n      type: CHANGE_THEME,\n      payload: initialState.darkMode,\n    });\n  };\n\n  const changeColor = (colorName, colorValue) => {\n    dispatch({\n      type: CHANGE_COLOR,\n      payload: { colorName, colorValue },\n    });\n  };\n\n  const changeShadowBlur = (blurValue) => {\n    dispatch({\n      type: CHANGE_SHADOW_BLUR,\n      payload: blurValue,\n    });\n  };\n\n  const changeBorderRadius = (borderRadius) => {\n    dispatch({\n      type: CHANGE_BORDER_RADIUS,\n      payload: borderRadius,\n    });\n  };\n\n  const changeShadowLength = (shadowLength) => {\n    dispatch({\n      type: CHANGE_SHADOW_LENGTH,\n      payload: shadowLength,\n    });\n  };\n\n  const changeDarkShadowFactor = (darkShadowFactor) => {\n    dispatch({\n      type: CHANGE_DARK_SHADOW_FACTOR,\n      payload: darkShadowFactor,\n    });\n  };\n\n  const changeLightShadowFactor = (lightShadowFactor) => {\n    dispatch({\n      type: CHANGE_LIGHT_SHADOW_FACTOR,\n      payload: lightShadowFactor,\n    });\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        changeTheme,\n        changeColor,\n        changeBackground,\n        changeShadowBlur,\n        changeBorderRadius,\n        changeShadowLength,\n        changeDarkShadowFactor,\n        changeLightShadowFactor,\n        font: state.font,\n        shadows: state.shadows,\n        colorRGB: {\n          Red: state.Red,\n          Green: state.Green,\n          Blue: state.Blue,\n        },\n        colorHEX: state.hexColor,\n        darkMode: state.darkMode,\n        shadowBlur: state.shadowBlur,\n        codeFontColor: state.codeFontColor,\n        shadowLength: state.shadowLength,\n        borderRadius: state.borderRadius,\n        darkShadowFactor: state.darkShadowFactor,\n        lightShadowFactor: state.lightShadowFactor,\n        codeBackgroundColor: state.codeBackgroundColor,\n      }}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeState;\n","import React, {useState} from \"react\";\n\n\nconst SoftUIGenButton = ({props, children, onClick, state='', type = 'default'}) => {\n\n    let mainColor, font, darkerShadow, lighterShadow = '#000';\n    let Blur, shadowLength = 0;\n    //TODO might be improved\n\n    if (typeof(props) != \"undefined\"){\n        mainColor = props.mainColor;\n        font = props.font;\n        darkerShadow = props.darkerShadow;\n        lighterShadow = props.lighterShadow;\n        Blur = props.Blur;\n        shadowLength = props.shadowLength;\n    }\n\n    const buttonStyle = {\n        default:{\n            initial:{\n                width: \"100%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`1px solid ${mainColor}`,\n                color:font,\n                boxShadow: `${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                       -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            active:{\n                width: \"100%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`1px solid ${mainColor}`,\n                color:font,\n                boxShadow: `inset ${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                       inset -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            hover:{\n                width: \"100%\",\n                border:`1px solid ${mainColor}`,\n                transition: 'background-color .5s, color .5s',\n                borderRadius: '12px',\n                padding: '.375rem .75rem',\n                backgroundColor:font,\n                color:mainColor,\n                fontWeight:'bold'\n            }\n        },\n        first:{\n            initial: {\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:font,\n                boxShadow: `${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderTopLeftRadius: '12px',\n                borderBottomLeftRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            active: {\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:font,\n                boxShadow: `inset ${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   inset -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderTopLeftRadius: '12px',\n                borderBottomLeftRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            hover: {\n                width: \"33%\",\n                backgroundColor:font,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:mainColor,\n                borderTopLeftRadius: '12px',\n                borderBottomLeftRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold',\n            }\n        },\n        middle:{\n            initial:{\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:font,\n                boxShadow: `0px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   0px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            active:{\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                boxShadow: `inset ${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   inset -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                color:font,\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            hover: {\n                width: \"33%\",\n                backgroundColor:font,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:mainColor,\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            }\n        },\n        last:{\n            initial: {\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:font,\n                boxShadow: `${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderTopRightRadius: '12px',\n                borderBottomRightRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            active: {\n                width: \"33%\",\n                backgroundColor:mainColor,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:font,\n                boxShadow: `inset ${shadowLength}px ${shadowLength}px ${Blur}px 0 ${darkerShadow},\n                   inset -${shadowLength}px -${shadowLength}px ${Blur}px 0 ${lighterShadow}`,\n                borderTopRightRadius: '12px',\n                borderBottomRightRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            },\n            hover: {\n                width: \"33%\",\n                backgroundColor:font,\n                transition: 'background-color .5s, color .5s',\n                border:`0px solid`,\n                color:mainColor,\n                borderTopRightRadius: '12px',\n                borderBottomRightRadius: '12px',\n                padding: '.375rem .75rem',\n                fontWeight:'bold'\n            }\n        }\n    }\n\n    const [buttonActive, setButtonActive] = useState(false);\n    const [buttonHover, setButtonHover] = useState(false);\n\n    function setButtonStyle(type) {\n        switch(state){\n            case 'active':\n                return buttonStyle[type].active\n            case 'hover':\n                return buttonStyle[type].hover\n            case \"initial\":\n                return buttonStyle[type].initial\n            default:\n                if (buttonActive){\n                    return buttonStyle[type].active\n                } else if (buttonHover) {\n                    return buttonStyle[type].hover\n                } else\n                    return buttonStyle[type].initial\n        }\n    }\n\n    return (\n        <button\n        onMouseDown={() => setButtonActive(true)}\n        onMouseUp={() => setButtonActive(false)}\n        onMouseEnter={() => setButtonHover(true)}\n        onMouseLeave={() => setButtonHover(false)}\n        style={setButtonStyle(type)}\n        onClick={onClick}\n        >\n            {children}\n        </button>)\n}\n\nexport default SoftUIGenButton;","import React, {useContext} from \"react\";\nimport ThemeContext from \"../../contexts/theme/ThemeContext\";\n\nconst Input = ({\n                   type,\n                   placeholder,\n                   value,\n                   onChange,\n                   onFocus,\n                   onBlur,\n                   required = false,\n                   name,\n                   autoComplete='on',\n                   style = {} }) => {\n    const themeContext =  useContext(ThemeContext);\n    const {darkMode} = themeContext;\n\n    return(\n        <input\n            style={style}\n            className={darkMode ? \"Input-Dark\" : \"Input\"}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            required={required}\n            name={name}\n            autoComplete={autoComplete}\n        />\n    )\n};\n\nexport default Input;","import React, {useState} from \"react\";\nimport Input from \"../../Inputs/Input.component\";\n\n\nconst SoftUIGenInput = ({props, type = 'text', onChange, placeholder, value, state=''}) => {\n\n    //TODO might be improved\n\n    const [inputFocus, setInputFocus] = useState(false);\n    let mainColor, font, darkerShadow, lighterShadow = '#121212';\n    let Blur, shadowLength = 1;\n\n    if (typeof(props) != 'undefined'){\n        mainColor = props.mainColor;\n        font = props.font;\n        darkerShadow = props.darkerShadow;\n        lighterShadow = props.lighterShadow;\n        Blur = props.Blur;\n        shadowLength = props.shadowLength;\n    }\n\n    const inputStyle = {\n        default: {\n            borderColor: mainColor,\n            backgroundColor: mainColor,\n            color: font,\n            boxShadow: `inset 2px 2px 10px 0 ${darkerShadow}, inset -2px -2px 10px 0 ${lighterShadow}`\n        },\n        focus: {\n            borderColor: mainColor,\n            backgroundColor: mainColor,\n            color: font,\n            boxShadow: `2px 2px 10px 0 ${darkerShadow}, -2px -2px 10px 0 ${lighterShadow}`\n        }\n    }\n\n    function setInputStyle() {\n        switch(state){\n            case 'focus':\n                return inputStyle.focus\n            case \"blur\":\n                return inputStyle.default\n            default:\n                if (inputFocus){\n                    return inputStyle.focus\n                } else return inputStyle.default\n        }\n    }\n\n    return (\n        <Input type={type}\n               onFocus={() => setInputFocus(true)}\n               onBlur={() => setInputFocus(false)}\n               onChange={onChange}\n               value={value}\n               placeholder={placeholder}\n               style={setInputStyle()}\n        />)\n}\n\nexport default SoftUIGenInput;","import React, {useContext} from \"react\";\nimport ThemeContext from '../../contexts/theme/ThemeContext';\n\nconst Badge = ({children, type = 'normal', className,  color, style}) => {\n    const themeContext = useContext(ThemeContext);\n    const {darkMode} = themeContext;\n\n    const badgeNormal = (\n        <span className={\n            `Badge-${darkMode ? \"Dark\" : 'Light'} \n            ${color && color}${darkMode ? \"-Dark\" : \"\"} \n            ${className && className}`}\n              style={style}\n        >{children}\n        </span>\n    );\n    const badgeSmall = (\n        <span\n            style={style}\n            className={\n            `Badge-Small-${darkMode ? \"Dark\" : 'Light'} \n            ${color && color}${darkMode ? \"-Dark\" : \"\"} \n            ${className && className}`}>{children}\n        </span>\n    );\n\n    if (type === 'normal'){\n        return badgeNormal\n    } else if (type === 'small') {\n        return badgeSmall\n    } else return null\n};\n\nexport default Badge;","import React from \"react\";\nimport reactCSS from \"reactcss\";\nimport { SketchPicker } from \"react-color\";\nimport ThemeContext from \"../../../contexts/theme/ThemeContext\";\n\nclass ColorPickerSketch extends React.Component {\n  static contextType = ThemeContext;\n\n  state = {\n    displayColorPicker: false,\n    color: {\n      hex: this.context.hexColor,\n    },\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange = (color) => {\n    console.log(\"color picker on change\", { color: color });\n    this.context.changeColor(\"Hex\", color.hex);\n    this.setState({ color: color.hex });\n  };\n\n  render() {\n    const colorStyle = {\n      color: {\n        width: \"36px\",\n        height: \"36px\",\n        border: `3px solid ${this.context.font}`,\n        display: \"inline-block\",\n        borderRadius: \"10px\",\n        background: this.state.background,\n      },\n    };\n\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"30px\",\n          height: \"30px\",\n          display: \"inline-block\",\n          borderRadius: \"12px\",\n          background: `rgb(${this.context.colorRGB.Red}, ${this.context.colorRGB.Green}, ${this.context.colorRGB.Blue})`,\n        },\n        swatch: {\n          height: \"36px\",\n          width: \"36px\",\n          padding: \"1px\",\n          borderRadius: `${this.context.borderRadius}px`,\n          boxShadow: `rgb(${this.context.shadows.darkerShadowArray[0]}, ${this.context.shadows.darkerShadowArray[1]}, ${this.context.shadows.darkerShadowArray[2]})\n                     ${this.context.shadowLength}px ${this.context.shadowLength}px ${this.context.shadowBlur}px 0px,\n                      rgb(${this.context.shadows.ligherShadowArray[0]}, ${this.context.shadows.ligherShadowArray[1]}, ${this.context.shadows.ligherShadowArray[2]}) \n                      -${this.context.shadowLength}px -${this.context.shadowLength}px ${this.context.shadowBlur}px 0px`,\n          display: \"inline-block\",\n          cursor: \"pointer\",\n        },\n        popover: {\n          position: \"absolute\",\n          zIndex: \"2\",\n        },\n        cover: {\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\",\n        },\n      },\n    });\n\n    return (\n      <div style={{ display: \"inline-block\", verticalAlign: \"-50%\" }}>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={colorStyle.color} />\n          {/*<div style={ styles.color } />*/}\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <SketchPicker\n              disableAlpha={true}\n              color={this.state.color}\n              onChange={this.handleChange}\n              presetColors={[\n                \"#Ed2939\",\n                \"#CCBBFF\",\n                \"#ffd9f4\",\n                \"#F0f0f0\",\n                \"#121212\",\n                \"#60f8d3\",\n                \"#8760f8\",\n              ]}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ColorPickerSketch;\n","import React, {useContext, useState} from \"react\";\nimport SoftUIGenButton from \"./Generator.components/SoftUIGenButton\";\nimport SoftUIGenInput from \"./Generator.components/SoftUIGenInput\";\nimport Badge from \"../Badge/Badge.component\";\nimport ColorPickerSketch from \"./Generator.components/colorPickerSketch\";\nimport ThemeContext from \"../../contexts/theme/ThemeContext\";\nimport { toHex } from \"./Functions.SoftUIGenerator\";\n\n//rgb 0 9 62 night sky color\n// 1 161 255 rgb blue\n\nconst Generator = () => {\n    const themeContext =  useContext(ThemeContext);\n    const {\n        font,\n        colorRGB, colorHEX,\n        shadows,\n        shadowBlur, shadowLength,\n        borderRadius: borderRadius,\n        darkShadowFactor, lightShadowFactor,\n        changeColor,\n        codeFontColor,\n        changeShadowBlur,\n        changeBorderRadius,\n        changeShadowLength,\n        codeBackgroundColor,\n        changeDarkShadowFactor,\n        changeLightShadowFactor,\n    } = themeContext;\n\n    const [FONT, setFONT] = useState(font);\n\n    const lighterShadows = shadows.ligherShadowArray;\n    const darkerShadows = shadows.darkerShadowArray;\n    const mainColor = `rgb(${colorRGB.Red}, ${colorRGB.Green}, ${colorRGB.Blue})`\n    const lighterShadow = `rgb(${lighterShadows[0]}, ${lighterShadows[1]}, ${lighterShadows[2]})`\n    const darkerShadow = `rgb(${darkerShadows[0]}, ${darkerShadows[1]}, ${darkerShadows[2]})`\n\n    // True for Hex and False for RGB\n    const [colorInputMode, setColorInputMode] = useState(true);\n    const onChangeBlur = (event) => changeShadowBlur(event.target.value)\n    const onChangeRadius = (event) => changeBorderRadius(event.target.value)\n    const onChangeColor = (event, hexOrRGBColorName) => changeColor(hexOrRGBColorName, event.target.value);\n    const onChangeShadowLength = (event) => changeShadowLength(event.target.value)\n    const onChangeLightShadowFactor = (event) => changeLightShadowFactor(event.target.value)\n    const onChangeDarkShadowFactor = (event) => changeDarkShadowFactor(event.target.value)\n    const changeFontColor = () => {\n        if (FONT === \"#000\")\n        {\n            setFONT('#FFF')\n        }\n        else if (FONT === '#FFF'){\n            setFONT('#000')\n        }\n    }\n\n    const componentProps = {\n        mainColor:mainColor,\n        font:FONT,\n        Blur:shadowBlur,\n        shadowLength:shadowLength,\n        darkerShadow:darkerShadow,\n        lighterShadow:lighterShadow\n    }\n\n    const containerStyle = {\n       width:'100%',\n       height:'300px',\n       minHeight:'100px',\n       backgroundColor: mainColor,\n       color: FONT,\n       mixBlendMode: 'normal',\n       boxShadow: `${shadowLength}px ${shadowLength}px ${shadowBlur}px 0 ${darkerShadow},\n                   -${shadowLength}px -${shadowLength}px ${shadowBlur}px 0 ${lighterShadow}`,\n       border: `1px solid ${mainColor}`,\n       borderRadius: `${borderRadius}px`\n    }\n\n    const hexInput = (\n        <div className={'row pt-1'}>\n            <div className={'col-12'}>\n                <h6>\n                    <Badge style={{backgroundColor:darkerShadow}}>#\n                        <span style={{color:'#ed2939', fontWeight:'bold'}}>FF</span>\n                        <span style={{color:'#0B6623', fontWeight:'bold'}}>FF</span>\n                        <span style={{color:'#0f52Ba', fontWeight:'bold'}}>FF</span>\n                    </Badge>\n                </h6>\n                <SoftUIGenInput\n                    onChange={event => onChangeColor(event, 'Hex')}\n                    value={colorHEX}\n                    placeholder={'#000000'}\n                    props={componentProps}\n                />\n            </div>\n        </div>\n    )\n\n    const rgbInput = (\n        <div className={'row pt-1'}>\n            <div className={'col-4'}>\n                <h6>\n                    <Badge style={{backgroundColor:darkerShadow}}>\n                        <span style={{color:'#ed2939'}}>Red</span>\n                    </Badge>\n                </h6>\n                <SoftUIGenInput\n                    type={'number'}\n                    onChange={event => onChangeColor(event,\"Red\")}\n                    value={colorRGB.Red}\n                    placeholder={255}\n                    props={componentProps}\n                />\n            </div>\n            <div className={'col-4'}>\n                <h6>\n                    <Badge style={{backgroundColor:darkerShadow}}>\n                        <span style={{color:'#0B6623'}}>Green</span>\n                    </Badge>\n                </h6>\n                <SoftUIGenInput\n                    type={'number'}\n                    onChange={event => onChangeColor(event,\"Green\")}\n                    value={colorRGB.Green}\n                    placeholder={255}\n                    props={componentProps}\n                />\n            </div>\n            <div className={'col-4'}>\n                <h6>\n                    <Badge style={{backgroundColor:darkerShadow}}>\n                        <span style={{color:'#0f52Ba'}}>Blue</span>\n                    </Badge>\n                </h6>\n                <SoftUIGenInput\n                    type={'number'}\n                    onChange={event => onChangeColor(event,\"Blue\")}\n                    value={colorRGB.Blue}\n                    placeholder={255}\n                    props={componentProps}\n                />\n            </div>\n        </div>\n    )\n\n    return(\n            <div className={'container-fluid pb-5'} style={{minHeight:'100vh',backgroundColor:mainColor, color:FONT}}>\n                <div className={'container pt-3'}>\n                    <h3>Soft-UI generator</h3>\n                    <div className='row mt-4 mb-4' style={{marginRight:'0px', marginLeft:'0px'}}>\n                        <div className={'col-md-6 mb-5'}>\n                            <div className={'row mb-3'}>\n                                <div className={'col-12'}>\n                                    <div\n                                        className={'align-self-center'}\n                                        style={containerStyle}\n                                    />\n                                </div>\n                            </div>\n                            {/*Button showcase*/}\n                            <div className={'row'}>\n                                <div className={'col-12'}><h6 style={{fontWeight:'bold'}}>Button</h6>\n                                    <div className={'row'}>\n                                        <div className={'col-md-4 mb-3'}>\n                                            <SoftUIGenButton\n                                                props={componentProps}\n                                                state={'initial'}\n                                                children={'Button'}\n                                            />\n                                        </div>\n                                        <div className={'col-md-4 mb-3'}>\n                                            <SoftUIGenButton\n                                                state={'active'}\n                                                props={componentProps}\n                                                children={'Active'}/>\n                                        </div>\n                                        <div className={'col-md-4 mb-3'}>\n                                            <SoftUIGenButton\n                                                state={'hover'}\n                                                props={componentProps}\n                                                children={'hover'}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*Input showcase*/}\n                            <div className={'row'}>\n                                <div className={'col-12'}>\n                                    <h6 style={{fontWeight:'bold'}}>Input</h6>\n                                    <div className={'row'}>\n                                        <div className={'col-md-6 mb-3'}>\n                                            <SoftUIGenInput\n                                                props={componentProps}\n                                                state={'blur'}\n                                                placeholder={'Input on Blur'}/>\n                                        </div>\n                                        <div className={'col-md-6 mb-3'}>\n                                            <SoftUIGenInput\n                                                props={componentProps}\n                                                state={'focus'}\n                                                placeholder={'Input on Focus'}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={'col-md-6'}>\n                            <div style={{\n                                minHeight:'100px',\n                                backgroundColor: mainColor,\n                                color: FONT,\n                                mixBlendMode: 'normal',\n                                boxShadow: `${shadowLength}px ${shadowLength}px ${shadowBlur}px 0 ${darkerShadow},\n                                 -${shadowLength}px -${shadowLength}px ${shadowBlur}px 0 ${lighterShadow}`,\n                                border: `1px solid ${mainColor}`,\n                                borderRadius: `${borderRadius}px`}}\n                                className={'pt-3 pb-3 pl-3 pr-3'}>\n                                <div className={'row'}>\n                                    <div className={'col-6 mr-3'}>\n                                        <h5>Pick a color:</h5>\n                                    </div>\n                                </div>\n                                <div className={'row mb-2'}>\n                                    <div className={'col-12'}>\n                                        <ColorPickerSketch/>\n                                        <div className={'ml-3'} style={{width:'30%', display:'inline-block'}}>\n                                        <SoftUIGenButton\n                                            props={componentProps}\n                                            children={colorInputMode ? 'Hex' : 'RGB'}\n                                            onClick={() => setColorInputMode(!colorInputMode)}\n                                        />\n                                        </div>\n                                        <div  className={'ml-3'} style={{width:'45%', display:'inline-block'}}>\n                                            <SoftUIGenButton\n                                                props={componentProps}\n                                                onClick={() => changeFontColor()}\n                                                children={\"Change font color\"}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                {colorInputMode ? hexInput : rgbInput}\n                                <div className={'row'}>\n                                    <div className={'col-md-4'}>\n                                        <h6>Blur</h6>\n                                        <SoftUIGenInput type={'number'} onChange={onChangeBlur}\n                                               value={shadowBlur} placeholder={'30'} props={componentProps} />\n                                    </div>\n                                    <div className={'col-md-4'}>\n                                        <h6>Radius</h6>\n                                        <SoftUIGenInput type={'number'}\n                                               onChange={onChangeRadius}\n                                               value={borderRadius} placeholder={'12'} props={componentProps} />\n                                    </div>\n                                    <div className={'col-md-4'}>\n                                        <h6>Shadow Length</h6>\n                                        <SoftUIGenInput type={'number'}\n                                               onChange={onChangeShadowLength}\n                                               value={shadowLength} placeholder={'5px'} props={componentProps} />\n                                    </div>\n                                    <div className={'col-md-6'}>\n                                        <h6>Dark Shadow</h6>\n                                        <SoftUIGenInput type={'number'}\n                                                    onChange={onChangeDarkShadowFactor} value={Math.round(darkShadowFactor*100)}\n                                                        placeholder={'dark shadow factor'} props={componentProps} />\n                                    </div>\n                                    <div className={'col-md-6'}>\n                                        <h6>Light Shadow</h6>\n                                        <SoftUIGenInput type={'number'}\n                                               onChange={onChangeLightShadowFactor}\n                                               value={Math.round(lightShadowFactor*100)}\n                                               placeholder={'light shadow factor'} props={componentProps}/>\n                                    </div>\n                                </div>\n                                <div>\n                                    <pre className={'pt-3 pb-3 pr-1 pl-3'} style={{backgroundColor:codeBackgroundColor, borderRadius:'12px',boxShadow:`${codeBackgroundColor} 2px 2px 10px 0px inset, ${codeBackgroundColor} -2px -2px 10px 0px inset`}}>\n                                        <code style={{fontSize:'10px',color:codeFontColor}}>\n                                            <span style={{color:'#ed2939'}} >background:</span> <span style={{fontWeight:'bold'}}>{colorInputMode ? `#${colorHEX}` : `rgb(${colorRGB.Red}, ${colorRGB.Green}, ${colorRGB.Blue})`}</span>;<br/>\n                                            <span style={{color:'#ed2939'}}>border-radius:</span> {borderRadius}px;<br/>\n                                            <span style={{color:'#ed2939'}}>box-shadow:</span> {shadowLength}px {shadowLength}px {shadowBlur}px 0\n                                            {\" \"}<span style={{fontWeight:'bold'}}>\n                                                {colorInputMode ?\n                                                    `#${toHex(darkerShadows[0])}${toHex(darkerShadows[1])}${toHex(darkerShadows[2])}`\n                                                    :\n                                                    `rgb(${darkerShadows[0]}, ${darkerShadows[1]}, ${darkerShadows[2]})` }</span>,\n                                            <br/>\n                                            {\"            \"}-{shadowLength}px -{shadowLength}px {shadowBlur}px 0\n                                            {\" \"}<span style={{fontWeight:'bold'}}>\n                                                {colorInputMode ?\n                                                    `#${toHex(lighterShadows[0])}${toHex(lighterShadows[1])}${toHex(lighterShadows[2])}`\n                                                    :\n                                                    `rgb(${lighterShadows[0]}, ${lighterShadows[1]}, ${lighterShadows[2]})` }\n                                            </span>;\n                                        </code>\n                                    </pre>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\n\n\nexport default Generator;","import React from 'react';\nimport NavigationBar from \"./Components/Navbar/NavigationBar.component\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ThemeState from \"./contexts/theme/ThemeState\";\nimport Generator from \"./Components/Generator/Generator\";\nimport './custom-styles.css'\n\nfunction App() {\n  return (\n      <ThemeState>\n         <NavigationBar />\n         <Generator />\n      </ThemeState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}